   1              	# file: gpio_d.s
   2              	
   3              	.include "macros.inc"
   1              	# file: macros.inc
   2              	
  34              	  .list
   4              	
   5              	.include "src/gpio_regs.inc"
   1              	# file: gpio_regs.inc
   2              	
   3              	# GPIO Port Base Addresses
   4              	.equ GPIOA_BASE,0x40020000
   5              	.equ GPIOB_BASE,0x40020400
   6              	.equ GPIOC_BASE,0x40020800
   7              	.equ GPIOD_BASE,0x40020c00
   8              	.equ GPIOE_BASE,0x40021000
   9              	
  10              	# GPIO Register Offsets
  11              	.equ GPIO_MODER,0x00
  12              	.equ GPIO_OTYPER,0X04
  13              	.equ GPIO_OSPEEDR,0x08
  14              	.equ GPIO_PUPDR,0x0c
  15              	.equ GPIO_IDR,0x10
  16              	.equ GPIO_ODR,0x14
  17              	.equ GPIO_BSRR,0x18
  18              	.equ GPIO_LCKR,0x1c
  19              	.equ GPIO_AFRL,0x20
  20              	.equ GPIO_AFRH,0x24
   6              	    
   7              	  SET_TARGET
   8              	
   9              	  .text
  10              	
  11              	  FUNCTION gpio_d_init,global
  12              	
  13              	    // Push lr onto the stack
  14 0000 00B5     	    push {lr}
  15              	
  16              	    // Set r0 to 3 since we want to enable the clock for GPIOD
  17 0002 4FF00300 	    mov r0,#3
  18 0006 FFF7FEFF 	    bl  rcc_gpio_enable
  19              	
  20              	    // Load r3 with the GPIOD base address
  21 000a 064B     	    ldr r3,=#GPIOD_BASE
  22              	
  23              	    // Initialize the pins in port D to output
  24 000c 064A     	    ldr r2,=#0x00000000
  25 000e DA60     	    str r2,[r3,#GPIO_PUPDR]
  26 0010 5A60     	    str r2,[r3,#GPIO_OTYPER]
  27 0012 5A61     	    str r2,[r3,#GPIO_ODR]
  28              	
  29 0014 054A     	    ldr r2,=#0x55555555
  30 0016 1A60     	    str r2,[r3,#GPIO_MODER]
  31              	
  32 0018 054A     	    ldr r2,=#0xffffffff
  33 001a 9A60     	    str r2,[r3,#GPIO_OSPEEDR]
  34              	    
  35              	    // Pop lr off the stack
  36 001c 5DF804EB 	    pop {lr}
  37              	
  38 0020 7047     	    bx lr
  39              	  
  40 0022 0000000C 	  ENDFUNC gpio_d_init
  40      02400000 
  40      00005555 
  40      5555FFFF 
  40      FFFF
  41              	
  42              	  // Define function gpio_d_put 
  43              	  FUNCTION gpio_d_put,global
  44              	    
  45              	    // Load the base address of GPIOD into r3
  46 0034 014B     	    ldr r3,=#GPIOD_BASE
  47              	
  48 0036 5861     	    str r0,[r3,#GPIO_ODR]
  49              	
  50 0038 7047     	    bx  lr
  51              	
  52 003a 0000000C 	  ENDFUNC gpio_d_put
  52      0240
  53              	  
  54              	  // Define function gpio_d_get_current 
  55              	  FUNCTION gpio_d_get_current,global
  56              	    
  57              	    // Load the base address of GPIOD into r3
  58 0040 014B     	    ldr r3,=#GPIOD_BASE
  59              	
  60 0042 5869     	    ldr r0,[r3,#GPIO_ODR]
  61              	
  62 0044 7047     	    bx  lr
  63              	
  64 0046 0000000C 	  ENDFUNC gpio_d_put
  64      0240
  65              	
  66              	  .end
DEFINED SYMBOLS
                            *ABS*:00000001 ctxm4
 ./src/gpio_regs.inc:4      *ABS*:40020000 GPIOA_BASE
 ./src/gpio_regs.inc:5      *ABS*:40020400 GPIOB_BASE
 ./src/gpio_regs.inc:6      *ABS*:40020800 GPIOC_BASE
 ./src/gpio_regs.inc:7      *ABS*:40020c00 GPIOD_BASE
 ./src/gpio_regs.inc:8      *ABS*:40021000 GPIOE_BASE
 ./src/gpio_regs.inc:11     *ABS*:00000000 GPIO_MODER
 ./src/gpio_regs.inc:12     *ABS*:00000004 GPIO_OTYPER
 ./src/gpio_regs.inc:13     *ABS*:00000008 GPIO_OSPEEDR
 ./src/gpio_regs.inc:14     *ABS*:0000000c GPIO_PUPDR
 ./src/gpio_regs.inc:15     *ABS*:00000010 GPIO_IDR
 ./src/gpio_regs.inc:16     *ABS*:00000014 GPIO_ODR
 ./src/gpio_regs.inc:17     *ABS*:00000018 GPIO_BSRR
 ./src/gpio_regs.inc:18     *ABS*:0000001c GPIO_LCKR
 ./src/gpio_regs.inc:19     *ABS*:00000020 GPIO_AFRL
 ./src/gpio_regs.inc:20     *ABS*:00000024 GPIO_AFRH
        src/gpio_d.s:11     .text:00000000 gpio_d_init
        src/gpio_d.s:11     .text:00000000 $t
        src/gpio_d.s:40     .text:00000022 $d
        src/gpio_d.s:43     .text:00000034 gpio_d_put
        src/gpio_d.s:43     .text:00000034 $t
        src/gpio_d.s:52     .text:0000003a $d
        src/gpio_d.s:55     .text:00000040 gpio_d_get_current
        src/gpio_d.s:55     .text:00000040 $t
        src/gpio_d.s:64     .text:00000046 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
rcc_gpio_enable
